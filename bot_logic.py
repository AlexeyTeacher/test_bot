from datetime import datetime
import random

from telegram import ParseMode, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ConversationHandler

from db import session
from config import FIRST, SECOND, FOURTH, FIFTH, END, THREE, ONE, TWO, THIRD, HELP, logger
from models import User, ContentType, Category, History, Document

USER_BASE = {}
N_EXAMPLE = ''


def start(update, context):
    """–°—Ç–∞—Ä—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å."""
    try:
        login = update.message.from_user.name
        old_user = session.query(User).filter(User.login == login).first()
        if old_user is None:
            new_user = User(
                login=login,
                name=update.message.from_user.full_name,
                created_at=datetime.now()
            )
            session.add(new_user)
            session.commit()
        logger.info(f'{login} >>> –ù–∞—á–∞–ª —Å–µ–∞–Ω—Å')
        keyboard = [
            [
                InlineKeyboardButton("üéû –í–∏–¥–µ–æ", callback_data=str(ONE)),
                InlineKeyboardButton("üèã –ó–∞–¥–∞–Ω–∏–µ‚Äç", callback_data=str(TWO)),
            ],
            [
                InlineKeyboardButton("üìÅ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä", callback_data=str(THREE)),
                InlineKeyboardButton("üÜò –°–ø—Ä–∞–≤–∫–∞", callback_data=str(HELP))
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text(
            f"ü¶æ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, *{update.message.from_user.first_name}*! "
            f"–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ!\n"
            f"–Ø –º–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ—Ä–∞–∑–±–æ—Ä –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∏–∑ –∑–∞–¥–∞—á, –∞ —Ç–∞–∫–∂–µ –¥–∞—Ç—å "
            f"—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n\n"
            f"üß† –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ä–∞–∑–±–æ—Ä—ã –≤–∑—è—Ç—ã —Å "
            f"[—Å–∞–π—Ç–∞](https://kpolyakov.spb.ru/school/ege/generate.htm) *–ö.–Æ. –ü–æ–ª—è–∫–æ–≤–∞* _(–Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞–Ω–∏–π —Å–æ–≤–ø–∞–¥–∞—é—Ç)_\n"
            f"üòÖ –í–∏–¥–µ–æ —Å —Ä–∞–∑–±–æ—Ä–∞–º–∏ –∑–∞–¥–∞—á —Å–æ–∑–¥–∞–Ω—ã –∞–≤—Ç–æ—Ä–æ–º —á–∞—Ç-–±–æ—Ç–∞ –∏–ª–∏ –≤–∑—è—Ç–æ –ª—É—á—à–µ–µ –∏–∑ —é—Ç—É–± \n"
            f"ü§ù –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∑–∞–¥–∞–Ω–∏—è–º *–ê–ª–µ–∫—Å–µ—é –ö–∞–±–∞–Ω–æ–≤—É* "
            f"–∏ –µ–≥–æ [—Å–∞–π—Ç—É kompege](https://kompege.ru/) \n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, —á—Ç–æ –≤—ã —Å–µ–π—á–∞—Å —Ö–æ—Ç–∏—Ç–µ üëá", reply_markup=reply_markup, parse_mode='Markdown')
    except Exception as e:
        logger.error(f'{e}')
    return FIRST


def stop(update, context):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /stop.
    –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        name = str(update.message.from_user.name)
        old_user = session.query(User).filter(User.login == name).first()
        update.message.reply_text(f'üññ –í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, {update.message.from_user.first_name}! \n'
                                  f'–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –ï–ì–≠, –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start')
        logger.info(f'{name} >>> /stop')
    except Exception as e:
        logger.error(f'{e}')
    return ConversationHandler.END


def end(update, context):
    """–ü–ª–∞–Ω–æ–≤—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–•–≤–∞—Ç–∏—Ç".
    –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        query = update.callback_query
        query.answer()
        name = str(query.from_user.name)
        old_user = session.query(User).filter(User.login == name).first()
        query.edit_message_text(text=f'üññ –í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ, {query.from_user.first_name}! \n'
                                     f'–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –ï–ì–≠, –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start')
        logger.info(f'{name} >>> –ó–∞–∫–æ–Ω—á–∏–ª —Å–µ–∞–Ω—Å')
    except Exception as e:
        logger.error(f'{e}')
    return ConversationHandler.END


def draw_keyboard(update):
    """–†–∏—Å—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ–Ω—é"""
    keyboard = [
            [
                InlineKeyboardButton("üéû –í–∏–¥–µ–æ", callback_data=str(ONE)),
                InlineKeyboardButton("üèã –ó–∞–¥–∞–Ω–∏–µ‚Äç", callback_data=str(TWO))
            ],
            [
                InlineKeyboardButton("üìÅ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä", callback_data=str(THREE)),
                InlineKeyboardButton("üíî –•–≤–∞—Ç–∏—Ç", callback_data=str(END)),
            ],
            [InlineKeyboardButton("üÜò –°–ø—Ä–∞–≤–∫–∞", callback_data=str(HELP))]
        ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    try:
        update.message.reply_text(text="üëá –í—ã–±–∏—Ä–∞–π—Ç–µ —Å–Ω–æ–≤–∞ üëá", reply_markup=reply_markup)
    except AttributeError as e:
        logger.error(f'{e}')
        update.callback_query.edit_message_text(text="üëá –í—ã–±–∏—Ä–∞–π—Ç–µ —Å–Ω–æ–≤–∞ üëá", reply_markup=reply_markup)


def run_doc(update, context):
    """–ö–Ω–æ–ø–∫–∞ –î–æ–∫—É–º–µ–Ω—Ç"""
    try:
        query = update.callback_query
        query.answer()
        query.edit_message_text('–ù–∞–ø–∏—à–∏—Ç–µ *—á–∏—Å–ª–æ–º* –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å',
                                parse_mode='Markdown')
    except Exception as e:
        logger.error(f'{e}')
    return FIFTH


def doc(update, context):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∏–∑ –ï–ì–≠"""
    try:
        number_lesson = update.message.text.strip().replace('‚Ññ', '')
        update.message.reply_text('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, '
                                      '–Ω—É–∂–Ω–æ –±—ã–ª–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 27')
        draw_keyboard(update)
    except Exception as e:
        logger.error(f'{e}')
    return FIRST


def run_video(update, context):
    """–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–µ–æ"""
    try:
        query = update.callback_query
        query.answer()
        query.edit_message_text('–ù–∞–ø–∏—à–∏—Ç–µ *—á–∏—Å–ª–æ–º* –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, –≤–∏–¥–µ–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
                                parse_mode='Markdown')
    except Exception as e:
        logger.error(f'{e}')
    return FOURTH


def video(update, context):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∏–¥–µ–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∏–∑ –ï–ì–≠"""
    try:
        number_lesson = update.message.text.strip().replace('‚Ññ', '')
        update.message.reply_text('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, '
                                      '–Ω—É–∂–Ω–æ –±—ã–ª–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 27')
        draw_keyboard(update)
    except Exception as e:
        logger.error(f'{e}')
    return FIRST


def run_example(update, context):
    """–ö–Ω–æ–ø–∫–∞ –∑–∞–¥–∞–Ω–∏–µ"""
    try:
        query = update.callback_query
        query.answer()
        query.edit_message_text('–ù–∞–ø–∏—à–∏—Ç–µ *—á–∏—Å–ª–æ–º* –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è',
                                parse_mode='Markdown')
    except Exception as e:
        logger.error(f'{e}')
    return SECOND


def example(update, context):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∏–∑ –ï–ì–≠"""
    try:
        number_example = update.message.text.strip().replace('‚Ññ', '')
        if number_example in [str(i) for i in range(1, 28)]:
            login = update.message.from_user.name
            old_user = session.query(User).filter(User.login == login).first()
            if number_example in ['20', '21']:
                number_example = '19'


            if number_example in ['19', '20', '21']:
                update.message.reply_text(f"‚úç –ù–∞–ø–∏—à–∏—Ç–µ *–æ—Ç–≤–µ—Ç—ã* –Ω–∞ –≤—Å–µ —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞.\n"
                                          f"*–§–æ—Ä–º–∞—Ç:* 1) X 2) Y 3) Z\n"
                                          f"–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —É–∫–∞–∂–∏—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ *–ø—Ä–æ–±–µ–ª*",
                                          parse_mode='Markdown')
            else:
                update.message.reply_text(f"‚úç –ù–∞–ø–∏—à–∏—Ç–µ *–æ—Ç–≤–µ—Ç* –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ. "
                                          f"–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —É–∫–∞–∂–∏—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ *–ø—Ä–æ–±–µ–ª*",
                                          parse_mode='Markdown')
            return THIRD
        else:
            update.message.reply_text('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, '
                                      '–Ω—É–∂–Ω–æ –±—ã–ª–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 27')
    except Exception as e:
        logger.error(f'{e}')
        draw_keyboard(update)
        return FIRST


def answer(update, context):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ"""
    try:
        user_answer = update.message.text.strip().upper().split()
        old_user = session.query(User).filter(User.login == update.message.from_user.name).first()

        update.message.reply_text(f'üßê –ü—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!')

        session.commit()
        draw_keyboard(update)
    except Exception as e:
        logger.error(f'{e}')
    return FIRST


def help_(update, context):
    """–°–ø—Ä–∞–≤–∫–∞"""
    keyboard = [
        [
            InlineKeyboardButton("üéû –í–∏–¥–µ–æ", callback_data=str(ONE)),
            InlineKeyboardButton("üèã –ó–∞–¥–∞–Ω–∏–µ‚Äç", callback_data=str(TWO))
        ],
        [
            InlineKeyboardButton("üìÅ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä", callback_data=str(THREE)),
            InlineKeyboardButton("üíî –•–≤–∞—Ç–∏—Ç", callback_data=str(END)),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    query = update.callback_query
    query.answer()

    text = f"*–ü—Ä–∏–≤–µ—Ç!*\n" \
           f"–ï–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ —Å 2021 –≥–æ–¥–∞ —Å–¥–∞—é—Ç –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. " \
           f"–í –æ—Ç–ª–∏—á–∏–µ  –æ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏, " \
           f"–≤–∞–º –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ—à–µ–Ω–∏—è —Å–∞–º–∏—Ö –∑–∞–¥–∞—á. –ù—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç—ã. " \
           f"–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –∏—Ö –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å *—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª*. " \
           f"–î–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫, —Ç–æ –≤—Å—ë-—Ä–∞–≤–Ω–æ –ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã.\n" \
           f"–í—Å–µ —Ç–∏–ø—ã –∑–∞–¥–∞—á –≤ –±–æ—Ç–µ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è *\"–Ω–æ–º–µ—Ä–∞\"*, –∏—Ö –≤ —ç—Ç–æ–º –≥–æ–¥—É *27!*\n" \
           f"–í –±–æ—Ç–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å *–≤–∏–¥–µ–æ* –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å *—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä* –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–¥–∞–Ω–∏—è. " \
           f"–ï—Å–ª–∏ –≤—ã —É–∂–µ –∏–∑—É—á–∏–ª–∏ —Ç–µ–º—É, —Ç–æ —Å–º–µ–ª–æ —Ä–µ—à–∞–π—Ç–µ –∑–∞–¥–∞—á–∏. " \
           f"–°–∞–º–∏ –∑–∞–¥–∞—á–∏ –≤–∑—è—Ç—ã —Å —Å–∞–π—Ç–∞ –ö.–Æ. –ü–æ–ª—è–∫–æ–≤–∞ (–Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞–Ω–∏–π —Å–æ–≤–ø–∞–¥–∞—é—Ç).\n" \
           f"–ë–æ—Ç –≤–µ–¥–µ—Ç —Å—á–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.\n\n" \
           f"*–ù–æ–º–µ—Ä–∞ –∑–∞–¥–∞—á:*\n"\
           f"\n_(–ó–∞–¥–∞–Ω–∏—è 19, 20, 21 –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –≤ –æ–¥–Ω–æ, "\
           f"—Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ —Å —Ç—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞–º–∏)_\n\n" \
           f"*–ü–æ–º–∏–º–æ –∫–Ω–æ–ø–æ–∫ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" \
           f"/start - –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n" \
           f"/stop - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞"

    query.edit_message_text(text=text, parse_mode=ParseMode.MARKDOWN, reply_markup=reply_markup)